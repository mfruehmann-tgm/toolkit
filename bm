#!/bin/bash
#author: Max Fruehmann, 3BHIT 2018/19
echo " ______  _______ _______ _     _ _     _  _____       _______ _______ __   _ _______  ______ _______  ______"
echo " |_____] |_____| |       |____/  |     | |_____]      |  |  | |_____| | \  | |_____| |  ____ |______ |_____/"
echo " |_____] |     | |_____  |    \_ |_____| |            |  |  | |     | |  \_| |     | |_____| |______ |    \_"
echo ""

user=$(whoami)

function defrag () {
  echo "Defragmenting $1 ..."
  if e4defrag $1 -v; then
    echo "Defragmentation successfull!"
  else
    partitions=$(sudo fdisk -l $1 | grep ^\/dev | awk '{print $1}')
    if [[ ! -z "$partitions" ]]; then
      echo -e "\nHave you mounted the partitions?"
      echo $partitions
      echo ""
      sudo mkdir temp
      for partition in $partitions
      do
        echo "Mounting $partition ..."
        sudo mount $partition temp
        if e4defrag $partition -v; then
          echo "Defragmentation successfull!"
        fi
        sudo umount temp
      done
      rm -rf temp
    fi
  fi
}

if [[ "$1" == "" || "$2" == "" || "$user" != "root" || "$1" == "help" ]] 
then
  echo "Usage: bm <clone | defrag | backzip | unbackzip> <Input Device/File> <Output Device/File> <bootable (optional)>"
  echo "Please run as ROOT"
  echo "The bootable option is requiered if the partition clone should be bootable! "
  echo "It may fail if there are no bootable files in the partition"
  echo ""
  echo "If you are not on a debian based machine, please ensure following commands are available:"
  echo "rsync, grub-[setup,install,update], e4defrag, lrzip, dd"
  exit 2
fi
if [ ! -f "/usr/bin/dpkg" ]
then
  if [[ -f "/usr/bin/rsync" ]] && [[ -f "/usr/bin/lrzip" ]] && [[ -f "/usr/bin/e4defrag" ]] && [[ -f "/usr/bin/dd" ]]
  then
    continue
  else
    echo "If you are not on a debian based machine, please ensure following commands are available:"
    echo "rsync, grub-[setup,install,update], e4defrag, lrzip, dd"
    exit 2
  fi
fi
blocksize=$(blockdev --getbsz $2)
if [ "$(echo $2 | grep /dev/)" == "" ]
then
  let blocksize=1
fi
cores=$(lscpu | grep -m1 "CPU(s)" | awk '{print $2}')
threads=$cores*4
echo "Blocksize: $blocksize"
echo "Available CPU Cores: $cores"
if [ "$1" == "clone" ]
then
  if [ "$3" == "" ]
  then
    echo "Please specify Output Device"
    exit 2
  fi
  if [ ! -f "/usr/bin/rsync" ]
  then
    apt install rsync -y
  fi
  echo "Creating Backup from $2 on $3"
  defrag $2
  rsync -a $2 $3
  if [ "$4" == "bootable" ]
  then
    grub-setup $2
    grub-install $2
    grub-update
  fi
fi
if [ "$1" == "defrag" ]
then
  defrag $2
fi
if [ "$1" == "backzip" ]
then
  if [ ! -f "/usr/bin/lrzip" ]
  then
    apt-get install lrzip -y
  fi
  if [ "$3" == "" ]
  then
    echo "Please specify Output File"
    exit 2
  fi
  defrag $2
  echo "Creating Backup..."
  echo "This will take some time..."
  echo "Please be patient!"
  # TODO check if its better to use filesystem for temporary memory cache
  dd if=$2 bs=$blocksize status=progress conv=noerror,sync,notrunc | lrzip -L 9 > $3
fi
if [ "$1" == "unbackzip" ]
then
  if [ ! -f "/usr/bin/lrzip" ]
  then
    apt-get install lrzip -y
  fi
  if [ "$3" == "" ]
  then
    echo "Please specify Output File"
    exit 2
  fi
  echo "Unzipping Backup!"
  echo "This will take some time..."
  echo "Please be patient!"
  lrzip -d $2 -p $threads -o $3
  rm -f $2
fi
echo -e "\nFinished... Bye!"
echo "As Tommy Snooks, and Bessie Brooks were walking out one Sunday; Says Tommy Snooks to Bessie Brooks, Tomorrow will be Monday."

